# Generated by Django 4.2.7 on 2025-09-27 09:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DailyPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("opening_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("closing_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("high_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("low_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("average_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "volume_traded",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("number_of_transactions", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "timb_daily_prices",
                "ordering": ["-date", "grade__grade_code"],
            },
        ),
        migrations.CreateModel(
            name="DashboardMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("TRANSACTION_COUNT", "Transaction Count"),
                            ("TOTAL_VOLUME", "Total Volume"),
                            ("TOTAL_VALUE", "Total Value"),
                            ("ACTIVE_MERCHANTS", "Active Merchants"),
                            ("FRAUD_ALERTS", "Fraud Alerts"),
                            ("SYSTEM_STATUS", "System Status"),
                            ("FLOOR_ACTIVITY", "Floor Activity"),
                            ("GRADE_PERFORMANCE", "Grade Performance"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=15)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "timb_dashboard_metrics",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="FarmerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("farmer_id", models.CharField(max_length=50, unique=True)),
                ("farm_name", models.CharField(blank=True, max_length=200)),
                ("farm_location", models.CharField(max_length=200)),
                (
                    "farm_size_hectares",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("contact_phone", models.CharField(max_length=20)),
                ("contact_address", models.TextField()),
                ("years_of_experience", models.IntegerField()),
                ("primary_tobacco_type", models.CharField(max_length=100)),
                (
                    "annual_production_capacity",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                ("bank_name", models.CharField(blank=True, max_length=100)),
                ("bank_account_number", models.CharField(blank=True, max_length=50)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "timb_farmer_profiles",
                "ordering": ["farm_name", "user__username"],
            },
        ),
        migrations.CreateModel(
            name="Merchant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(blank=True, max_length=200)),
                (
                    "business_registration_number",
                    models.CharField(blank=True, max_length=100),
                ),
                ("license_number", models.CharField(max_length=100, unique=True)),
                ("license_issue_date", models.DateField(blank=True, null=True)),
                ("license_expiry_date", models.DateField(blank=True, null=True)),
                ("business_address", models.TextField(blank=True)),
                ("business_phone", models.CharField(blank=True, max_length=20)),
                ("business_email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("bank_name", models.CharField(blank=True, max_length=100)),
                ("bank_account_number", models.CharField(blank=True, max_length=50)),
                ("bank_branch", models.CharField(blank=True, max_length=100)),
                (
                    "annual_trading_volume",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("trading_regions", models.JSONField(blank=True, default=list)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "timb_merchants",
                "ordering": ["company_name", "user__username"],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("FRAUD", "Fraud Detection"),
                            ("SYSTEM", "System Error"),
                            ("PERFORMANCE", "Performance Issue"),
                            ("SECURITY", "Security Alert"),
                            ("BUSINESS", "Business Rule Violation"),
                            ("PRICE", "Price Alert"),
                            ("VOLUME", "Volume Alert"),
                            ("FLOOR", "Floor Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "timb_system_alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TobaccoFloor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=200)),
                ("address", models.TextField()),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("capacity", models.IntegerField(help_text="Maximum bales capacity")),
                ("current_stock", models.IntegerField(default=0)),
                ("operating_hours", models.JSONField(default=dict)),
                ("coordinates", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "timb_tobacco_floors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TobaccoGrade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grade_code",
                    models.CharField(db_index=True, max_length=20, unique=True),
                ),
                ("grade_name", models.CharField(max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("PRIMING", "Priming Grades (P)"),
                            ("LUG", "Lug Grades (X)"),
                            ("LEAF", "Leaf Grades (L)"),
                            ("TIP", "Tip Grades (T)"),
                            ("STRIP", "Strip Grades (A)"),
                            ("CUTTER", "Cutter Grades (C)"),
                            ("SMOKING", "Smoking Grades (H)"),
                            ("SCRAP", "Scrap Grades (B)"),
                            ("LOOSE_LEAF", "Loose Leaf"),
                            ("REJECTION", "Rejection Codes"),
                            ("DEFECT", "Defect Codes"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "quality_level",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Grade 1 - Premium"),
                            (2, "Grade 2 - High Quality"),
                            (3, "Grade 3 - Good Quality"),
                            (4, "Grade 4 - Standard"),
                            (5, "Grade 5 - Basic"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "minimum_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "maximum_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("description", models.TextField(blank=True)),
                ("specifications", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("is_tradeable", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "timb_tobacco_grades",
                "ordering": ["category", "quality_level", "grade_code"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(max_length=40, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("login_time", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("logout_time", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "timb_user_sessions",
                "ordering": ["-login_time"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("FLOOR_SALE", "Floor Sale"),
                            ("CONTRACT_SALE", "Contract Sale"),
                            ("DIRECT_SALE", "Direct Sale"),
                            ("EXPORT", "Export Sale"),
                            ("INTERNAL_TRANSFER", "Internal Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("DISPUTED", "Disputed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price_per_kg", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=15)),
                ("sale_number", models.CharField(blank=True, max_length=50)),
                ("lot_number", models.CharField(blank=True, max_length=50)),
                (
                    "moisture_content",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("quality_assessment", models.TextField(blank=True)),
                ("quality_score", models.IntegerField(blank=True, null=True)),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CASH", "Cash"),
                            ("BANK_TRANSFER", "Bank Transfer"),
                            ("CHEQUE", "Cheque"),
                            ("MOBILE_MONEY", "Mobile Money"),
                            ("LETTER_OF_CREDIT", "Letter of Credit"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("is_flagged", models.BooleanField(default=False)),
                (
                    "fraud_score",
                    models.DecimalField(decimal_places=4, default=0, max_digits=5),
                ),
                ("fraud_reasons", models.JSONField(blank=True, default=list)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="purchases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "floor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="timb_dashboard.tobaccofloor",
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="timb_dashboard.tobaccograde",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sales",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "timb_transactions",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="tobaccograde",
            index=models.Index(
                fields=["category", "quality_level"],
                name="timb_tobacc_categor_57db5f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tobaccograde",
            index=models.Index(
                fields=["grade_code"], name="timb_tobacc_grade_c_f65f62_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tobaccograde",
            index=models.Index(
                fields=["is_active", "is_tradeable"],
                name="timb_tobacc_is_acti_ae2751_idx",
            ),
        ),
        migrations.AddField(
            model_name="tobaccofloor",
            name="manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="systemalert",
            name="floor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.tobaccofloor",
            ),
        ),
        migrations.AddField(
            model_name="systemalert",
            name="grade",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.tobaccograde",
            ),
        ),
        migrations.AddField(
            model_name="systemalert",
            name="resolved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="systemalert",
            name="transaction",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.transaction",
            ),
        ),
        migrations.AddField(
            model_name="merchant",
            name="preferred_grades",
            field=models.ManyToManyField(blank=True, to="timb_dashboard.tobaccograde"),
        ),
        migrations.AddField(
            model_name="merchant",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="merchant_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="merchant",
            name="verified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="verified_merchants",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="farmerprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="farmer_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="dashboardmetric",
            name="floor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.tobaccofloor",
            ),
        ),
        migrations.AddField(
            model_name="dashboardmetric",
            name="grade",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.tobaccograde",
            ),
        ),
        migrations.AddField(
            model_name="dailyprice",
            name="floor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="timb_dashboard.tobaccofloor",
            ),
        ),
        migrations.AddField(
            model_name="dailyprice",
            name="grade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="timb_dashboard.tobaccograde",
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["user", "is_active"], name="timb_user_s_user_id_0dced5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersession",
            index=models.Index(
                fields=["session_key"], name="timb_user_s_session_252333_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_id"], name="timb_transa_transac_b4f3f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["seller", "-timestamp"], name="timb_transa_seller__b756e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["buyer", "-timestamp"], name="timb_transa_buyer_i_36ed29_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["grade", "-timestamp"], name="timb_transa_grade_i_dafb24_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["floor", "-timestamp"], name="timb_transa_floor_i_01bcdb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["-timestamp"], name="timb_transa_timesta_c46354_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["is_flagged", "-timestamp"],
                name="timb_transa_is_flag_8cac47_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="systemalert",
            index=models.Index(
                fields=["alert_type", "-created_at"],
                name="timb_system_alert_t_bd6fbf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="systemalert",
            index=models.Index(
                fields=["severity", "is_active"], name="timb_system_severit_f5c0c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemalert",
            index=models.Index(
                fields=["floor", "-created_at"], name="timb_system_floor_i_fc3f93_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="merchant",
            index=models.Index(
                fields=["license_number"], name="timb_mercha_license_01b6de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="merchant",
            index=models.Index(
                fields=["is_verified", "is_active"],
                name="timb_mercha_is_veri_20eea4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="merchant",
            index=models.Index(
                fields=["company_name"], name="timb_mercha_company_c3241a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardmetric",
            index=models.Index(
                fields=["metric_type", "-timestamp"],
                name="timb_dashbo_metric__39cff4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardmetric",
            index=models.Index(
                fields=["floor", "-timestamp"], name="timb_dashbo_floor_i_1c851b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardmetric",
            index=models.Index(
                fields=["grade", "-timestamp"], name="timb_dashbo_grade_i_17673a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dailyprice",
            index=models.Index(
                fields=["grade", "-date"], name="timb_daily__grade_i_2a995f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dailyprice",
            index=models.Index(fields=["-date"], name="timb_daily__date_4494f1_idx"),
        ),
        migrations.AddIndex(
            model_name="dailyprice",
            index=models.Index(
                fields=["floor", "-date"], name="timb_daily__floor_i_9be3d8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dailyprice",
            unique_together={("grade", "date", "floor")},
        ),
    ]

# Generated by Django 4.2.7 on 2025-10-16 15:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('FRAUD_DETECTION', 'Fraud Detection'), ('YIELD_PREDICTION', 'Yield Prediction'), ('PRICE_PREDICTION', 'Price Prediction'), ('SIDE_BUYING_DETECTION', 'Side Buying Detection'), ('RISK_ASSESSMENT', 'Risk Assessment')], max_length=30)),
                ('version', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('TRAINING', 'Training'), ('ACTIVE', 'Active'), ('DEPRECATED', 'Deprecated'), ('ERROR', 'Error')], default='TRAINING', max_length=20)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('precision', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('recall', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('f1_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('training_data_size', models.IntegerField(default=0)),
                ('training_started', models.DateTimeField(blank=True, null=True)),
                ('training_completed', models.DateTimeField(blank=True, null=True)),
                ('encrypted_model_path', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='TrainingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='QUEUED', max_length=20)),
                ('training_parameters', models.JSONField(default=dict)),
                ('dataset_version', models.CharField(blank=True, max_length=50)),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('current_epoch', models.IntegerField(default=0)),
                ('total_epochs', models.IntegerField(default=100)),
                ('final_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('training_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('validation_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_jobs', to='ai_models.aimodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SideBuyingDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_name', models.CharField(max_length=200)),
                ('farmer_id', models.CharField(max_length=50)),
                ('merchant_name', models.CharField(max_length=200)),
                ('is_side_buying_detected', models.BooleanField(default=False)),
                ('confidence_score', models.DecimalField(decimal_places=3, max_digits=5)),
                ('risk_factors', models.JSONField(default=list)),
                ('contracted_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivered_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_ratio', models.DecimalField(decimal_places=3, max_digits=5)),
                ('market_price_deviation', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('alternative_sales_detected', models.BooleanField(default=False)),
                ('detection_date', models.DateTimeField(auto_now_add=True)),
                ('model_version', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ['-detection_date'],
                'indexes': [models.Index(fields=['is_side_buying_detected', 'detection_date'], name='ai_models_s_is_side_1e91eb_idx'), models.Index(fields=['farmer_id', 'detection_date'], name='ai_models_s_farmer__ba0c0a_idx')],
            },
        ),
        migrations.CreateModel(
            name='PredictionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('FRAUD', 'Fraud Detection'), ('YIELD', 'Yield Prediction'), ('PRICE', 'Price Prediction'), ('SIDE_BUYING', 'Side Buying Detection'), ('RISK', 'Risk Assessment')], max_length=20)),
                ('input_data', models.JSONField()),
                ('prediction_result', models.JSONField()),
                ('confidence_score', models.DecimalField(decimal_places=3, max_digits=5)),
                ('related_object_id', models.CharField(blank=True, max_length=100)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('model_used', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_models.aimodel')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['prediction_type', 'created_at'], name='ai_models_p_predict_50f8a6_idx'), models.Index(fields=['model_used', 'created_at'], name='ai_models_p_model_u_214e73_idx')],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=50)),
                ('metric_value', models.DecimalField(decimal_places=4, max_digits=10)),
                ('measurement_date', models.DateTimeField(auto_now_add=True)),
                ('test_data_size', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='ai_models.aimodel')),
            ],
            options={
                'ordering': ['-measurement_date'],
                'indexes': [models.Index(fields=['model', 'measurement_date'], name='ai_models_m_model_i_3e3d9c_idx'), models.Index(fields=['metric_name', 'measurement_date'], name='ai_models_m_metric__ba023d_idx')],
            },
        ),
    ]
